#!/home/luiss/.rvm/wrappers/ruby-2.7.2@project/ruby
require_relative './lib/option_parser.rb'
require_relative './lib/manager.rb'

class Main
  def initialize
    option_parser = OptionParser::OptionParser.new(ARGV)
   # manager = Manager::Manager.new
    main(option_parser)
  end

  def main(option_parser)
    case option_parser.opts[:command]
    when :init
      Manager::Manager.new(option_parser.opts[:file])
    when :build
      Manager::Manager.new.build(option_parser.opts[:build])
    when :set
      Manager::Manager.new.set(option_parser.opts[:set])
    when :var_list
      Manager::Manager.new.var_list()
    when :repo_list
      Manager::Manager.new.repo_list()
    when :status
      Manager::Manager.new.status()
    when :log 
      Manager::Manager.new.log(option_parser.opts[:log], option_parser.opts[:flag])
    when :help
      Manager::Manager.new.help()
    when :publish
      Manager::Manager.new.publish()
    when :clone
      Manager::Manager.new.clone(option_parser.opts[:clone])
    when :git
      Manager::Manager.new.internal_git(option_parser.opts[:git])
    when :save_config
      Manager::Manager.new.save_config(option_parser.opts[:save_config])
    when :versions
      Manager::Manager.new.versions(option_parser.opts[:versions])
    when :search
      Manager::Manager.new.search_log(option_parser.opts[:search])
    when :compare
      Manager::Manager.new.compare(option_parser.opts[:compare], option_parser.opts[:json])
    when :clean
      Manager::Manager.new.clean()
    when :sources
      Manager::Manager.new.sources_mg(option_parser.opts[:sources])
    else 
      puts "ERROR: Invalid Operation"
    end

  end
end

Main.new
