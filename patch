diff --git a/bsf b/bsf
index 3545c54..dc8d2cf 100755
--- a/bsf
+++ b/bsf
@@ -70,10 +70,11 @@ class Main
     opt.condition_option("set",             { name: "option", type: :equal, mandatory: true } )
     opt.condition_action("set")             { |opts| VarManager.instance.set(opts[:option][0], opts[:option][1]); VarManager.instance.save }
     # execute
+    opt.condition_option("execute",         { name: "verbose", short: "-v", type: :option } )
     opt.condition_option("execute",         { name: "confirm", short: "-y", type: :option } )
     opt.condition_option("execute",         { name: "parallel", short: "-p", type: :option } )
     opt.condition_option("execute",         { name: "task", mandatory: false, multiple: true } )
-    opt.condition_action("execute")         { |opts| Build.build(opts[:task], opts[:confirm], opts[:parallel]) }
+    opt.condition_action("execute")         { |opts| Build.build(opts[:task], opts[:confirm], opts[:parallel], opts[:verbose]) }
     # publish
     opt.condition_action("publish")         { |opts| Publish.publish() }
     # diff
@@ -81,7 +82,7 @@ class Main
     opt.condition_option("diff",            { name: "hash2", mandatory: true })
     opt.condition_action("diff")            { |opts| puts Diff.diff(opts[:hash1], opts[:hash2]) }
     # git
-    opt.condition_option("git",             { name: "gitcommand", mandatory: true, multiple: true } )
+    opt.condition_option("git",             { name: "gitcommand", mandatory: true, multiple: true, type: :args} )
     opt.condition_action("git")             { |opts| GitManager.internal_git(opts[:gitcommand]) }
     # search  $<options>
     opt.condition_option("search",          { name: "options", mandatory: true, multiple: true } )
diff --git a/lib/build.rb b/lib/build.rb
index 707eed1..9f43056 100644
--- a/lib/build.rb
+++ b/lib/build.rb
@@ -52,17 +52,17 @@ class Build
     end
   end
 
-  def self.build(selected_tasks, skip, parallel, api = false)
+  def self.build(selected_tasks, skip, parallel, is_verbose, api = false)
     data = Config.instance.tasks
     data = filter_task(data, selected_tasks) if selected_tasks
     DirManager.create_dir(DirManager.get_logs_path)
 
     validate_variables(data)
     pre_condition(data, skip)
-    parallel_verifier(data, parallel)
+    parallel_verifier(data, parallel, is_verbose)
   end
 
-  def self.execute(task, command)
+  def self.execute(task, command, is_verbose)
     mutex = Mutex.new
     mutex.lock
     Helper.set_internal_vars(task)
@@ -77,6 +77,7 @@ class Build
     puts "Executing #{task}.."
     status = nil
     Array(to_execute).each do |execute|
+      puts execute if is_verbose
       tmp = true
       if tmp
       status = system("echo 'BSF Executing: #{execute}' ;
@@ -95,14 +96,14 @@ class Build
   end
 
 
-  def self.parallel_verifier(data, parallel)
+  def self.parallel_verifier(data, parallel, is_verbose)
     task_list = []
     data.each do |task, command|
       if parallel
-        todo = Thread.new(task) { |this| execute(task, command) }
+        todo = Thread.new(task) { |this| execute(task, command, is_verbose) }
         task_list << todo
       else
-        execute(task, command)
+        execute(task, command, is_verbose)
       end
     end
     task_list.each { |task| task.join } if parallel
diff --git a/lib/cat.rb b/lib/cat.rb
index 977ad2b..9c9ccee 100644
--- a/lib/cat.rb
+++ b/lib/cat.rb
@@ -1,5 +1,5 @@
 module Cat
-  def cat(task, commit_id, file)
+  def self.cat(task, commit_id, file)
     Helper.validate_commit_id(commit_id)
     Helper.validate_task_exists(task)
 
@@ -9,10 +9,10 @@ module Cat
     end
 
     tmp_dir = DirManager.get_worktree_dir()
-    GitManager.internal_git("worktree add #{tmp_dir} #{commit_id}")
+    GitManager.create_worktree(commit_id, tmp_dir)
     cmd = "cat #{tmp_dir}/tasks/#{task}/#{file}"
     to_print = Helper.return_execute(cmd)
-    GitManager.internal_git("worktree remove #{tmp_dir}")
+    GitManager.remove_worktree(tmp_dir)
     to_print
   end
 end
\ No newline at end of file
diff --git a/lib/config.rb b/lib/config.rb
index 7160ab0..2b0ec06 100644
--- a/lib/config.rb
+++ b/lib/config.rb
@@ -22,6 +22,7 @@ class Config
   def self.init_bsf(config_source_path)
     internal_config_path = DirManager.get_config_path()
     unless DirManager.file_exists("#{config_source_path}/config.json")
+      puts config_source_path
       raise Ex::PathMustContainConfigFileException
     end
     if File.directory? DirManager.get_framework_path
diff --git a/lib/git_manager.rb b/lib/git_manager.rb
index f5b0399..9b88f68 100644
--- a/lib/git_manager.rb
+++ b/lib/git_manager.rb
@@ -71,10 +71,9 @@ class GitManager
   end
 
   def self.internal_git(command)
-    #p command
+
     command = command.join(" ") if command.class == Array
-    #p command
-    #exit
+
     if command =~ /commit/
       msg = "WARNING: This instruction may result in internal conflicts with the commit messages.\nDo you wish to continue? [y/n]"
       Helper.input_user(msg)
diff --git a/lib/lock.rb b/lib/lock.rb
index dcafa0e..36bcc9d 100644
--- a/lib/lock.rb
+++ b/lib/lock.rb
@@ -7,9 +7,9 @@ module Lock
     ]
 
     if block_list.any? { |arg| args.include?(arg) }
-      return true
-    else
       return false
+    else
+      return true
     end
   end
 
@@ -35,7 +35,7 @@ module Lock
   end
 
   def self.unlock(args)
-    return if blocklist(args)
+    return unless blocklist(args)
 
     lock_file = DirManager.get_lock_file
     if File.exists?(lock_file)
diff --git a/lib/ls.rb b/lib/ls.rb
index 305d398..ce5a2e9 100644
--- a/lib/ls.rb
+++ b/lib/ls.rb
@@ -9,10 +9,10 @@ module Ls
     end
 
     tmp_dir = DirManager.get_worktree_dir()
-    GitManager.internal_git("worktree add #{tmp_dir} #{commit_id} > /dev/null 2>&1")
+    GitManager.create_worktree(commit_id, tmp_dir)
     cmd = "ls #{tmp_dir}/tasks/#{task}"
     to_print = Helper.return_execute(cmd)
-    GitManager.internal_git("worktree remove #{tmp_dir} > /dev/null 2>&1")
+    GitManager.remove_worktree(tmp_dir)
     to_print
   end
 end
\ No newline at end of file
