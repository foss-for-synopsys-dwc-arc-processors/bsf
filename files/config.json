{
  "sources": {
    "arc-gnu-toolchain": {
      "repo": "https://github.com/foss-for-synopsys-dwc-arc-processors/arc-gnu-toolchain",
      "branch": "master"
    },
    "qemu": {
      "repo": "https://github.com/foss-for-synopsys-dwc-arc-processors/qemu",
      "branch": "master"
    },
    "toolchain": {
      "repo": "https://github.com/foss-for-synopsys-dwc-arc-processors/toolchain"
    }
  },
  "tasks": {
    "toolchain_linux_arc64": {
      "pre_condition": "test -d $var(@SOURCE)/arc-gnu-toolchain",
      "execute": [
        "$var(@SOURCE)/arc-gnu-toolchain/configure --prefix=$var(PREFIX) --target=arc64 --enable-linux ; make -j$var(NJOBS)",
        "ruby $var(@CONFIG_SOURCE_PATH)/versions.rb $var(PREFIX) $var(@SOURCE)/arc-gnu-toolchain $var(@BUILDNAME)",
        "mkdir -p $var(MOD_PREFIX)/$var(@BUILDNAME)",
        "erb prefix=$var(PREFIX) $var(@CONFIG_SOURCE_PATH)/toolchain.module.erb > $var(MOD_PREFIX)/$var(@BUILDNAME)/$var(MOD_VERSION).lua"
      ]
    },
    "toolchain_baremetal_arc64": {
      "pre_condition": "test -d $var(@SOURCE)/arc-gnu-toolchain",
      "execute": [
        "$var(@SOURCE)/arc-gnu-toolchain/configure --prefix=$var(PREFIX) --target=arc64 --disable-qemu --disable-multilib --disable-werror; make -j$var(NJOBS)",
        "ruby $var(@CONFIG_SOURCE_PATH)/versions.rb $var(PREFIX) $var(@SOURCE)/arc-gnu-toolchain $var(@BUILDNAME)",
        "mkdir -p $var(MOD_PREFIX)/$var(@BUILDNAME)",
        "erb prefix=$var(PREFIX) $var(@CONFIG_SOURCE_PATH)/toolchain.module.erb > $var(MOD_PREFIX)/$var(@BUILDNAME)/$var(MOD_VERSION).lua"
      ]
    },
    "toolchain_linux_arc": {
      "pre_condition": "test -d $var(@SOURCE)/arc-gnu-toolchain",
      "execute": [
        "$var(@SOURCE)/arc-gnu-toolchain/configure --prefix=$var(PREFIX) --target=arc --enable-linux ; make -j$var(NJOBS)",
        "ruby $var(@CONFIG_SOURCE_PATH)/versions.rb $var(PREFIX) $var(@SOURCE)/arc-gnu-toolchain $var(@BUILDNAME)",
        "mkdir -p $var(MOD_PREFIX)/$var(@BUILDNAME)",
        "erb prefix=$var(PREFIX) $var(@CONFIG_SOURCE_PATH)/toolchain.module.erb > $var(MOD_PREFIX)/$var(@BUILDNAME)/$var(MOD_VERSION).lua"
      ]
    },
    "toolchain_baremetal_arc": {
      "pre_condition": "test -d $var(@SOURCE)/arc-gnu-toolchain",
      "execute": [
        "$var(@SOURCE)/arc-gnu-toolchain/configure --prefix=$var(PREFIX) --target=arc --disable-qemu --disable-multilib --disable-werror; make -j$var(NJOBS)",
        "ruby $var(@CONFIG_SOURCE_PATH)/versions.rb $var(PREFIX) $var(@SOURCE)/arc-gnu-toolchain $var(@BUILDNAME)",
        "mkdir -p $var(MOD_PREFIX)/$var(@BUILDNAME)",
        "erb prefix=$var(PREFIX) $var(@CONFIG_SOURCE_PATH)/toolchain.module.erb > $var(MOD_PREFIX)/$var(@BUILDNAME)/$var(MOD_VERSION).lua"
      ]
    },
    "qemu": {
      "pre_condition": "test -d $var(@SOURCE)/qemu",
      "execute": [
        "$var(@SOURCE)/qemu/configure --prefix=$var(PREFIX) --target-list=arc-softmmu,arc-linux-user,arc64-softmmu,arc64-linux-user --disable-werror --enable-debug ; make -j$var(NJOBS) ; make install",
        "ruby $var(@CONFIG_SOURCE_PATH)/versions.rb $var(PREFIX) $var(@SOURCE)/qemu $var(@BUILDNAME)",
        "mkdir -p $var(MOD_PREFIX)/$var(@BUILDNAME)",
        "erb prefix=$var(PREFIX) $var(@CONFIG_SOURCE_PATH)/qemu.module.erb > $var(MOD_PREFIX)/$var(@BUILDNAME)/$var(MOD_VERSION).lua"
      ]
    },
    "hs_baremetal_tests": {
      "pre_condition": [
        "test -d $var(@SOURCE)/arc-gnu-toolchain/.git",
        "test -d $var(@SOURCE)/toolchain/.git",
        "which arc-elf32-gcc",
        "which qemu-system-arc"
      ],
      "execute": [
        "erb gcc_dir=$var(@SOURCE)/arc-gnu-toolchain/gcc/ toolchain_tripplet=arc-unknown-elf32 target_alias=arc-elf32 target_list=arc-sim-qemu toolchain_dir=$var(@SOURCE)/toolchain $var(@CONFIG_SOURCE_PATH)/baremetal_qemu.siteexp.erb > $var(@WORKSPACE)/site.exp",
        "mkdir -p $var(@WORKSPACE)/tmp ; mkdir -p $var(@WORKSPACE)/dump1 ; mkdir -p $var(@WORKSPACE)/dump2",
        "QEMU_HOME=$(dirname $(which qemu-system-arc))/../ runtest dg.exp ; echo ''",
        "mkdir -p $var(@PERSISTENT_WS) ; cp $var(@WORKSPACE)/gcc.sum $var(@WORKSPACE)/gcc.log $var(@PERSISTENT_WS)",
        "cp $(dirname $(which arc-elf32-gcc))/../versions.json $var(@WORKSPACE)/toolchain_baremetal_arc.json",
        "cp $(dirname $(which qemu-system-arc))/../versions.json $var(@WORKSPACE)/qemu.json"
      ],
      "publish_header": [
        "cat $var(@WORKSPACE)/toolchain_baremetal_arc.json",
        "cat $var(@WORKSPACE)/qemu.json"
      ],
      "comparator": "ruby $var(@CONFIG_SOURCE_PATH)/sum_compare.rb -v $var(@BASELINE)/gcc.sum $var(@REFERENCE)/gcc.sum"
    },
    "hs_linux_user_tests": {
      "pre_condition": [
        "test -d $var(@SOURCE)/arc-gnu-toolchain/.git",
        "test -d $var(@SOURCE)/toolchain/.git",
        "which arc-linux-gnu-gcc",
        "which qemu-system-arc"
      ],
      "execute": [
        "erb gcc_dir=$var(@SOURCE)/arc-gnu-toolchain/gcc/ toolchain_tripplet=arc-linux-gnu target_alias=arc-linux-gnu target_list=arc-linux-qemu-user toolchain_dir=$var(@SOURCE)/toolchain qemu_opts=\"-L $(dirname $(which arc-linux-gnu-gcc))/../sysroot\"  $var(@CONFIG_SOURCE_PATH)/linux_qemu_user.siteexp.erb > $var(@WORKSPACE)/site.exp",
        "mkdir -p $var(@WORKSPACE)/tmp ; mkdir -p $var(@WORKSPACE)/dump1 ; mkdir -p $var(@WORKSPACE)/dump2",
        "QEMU_HOME=$(dirname $(which qemu-system-arc))/../ runtest dg.exp ; echo ''",
        "mkdir -p $var(@PERSISTENT_WS) ; cp $var(@WORKSPACE)/gcc.sum $var(@WORKSPACE)/gcc.log $var(@PERSISTENT_WS)",
        "cp $(dirname $(which arc-linux-gnu-gcc))/../versions.json $var(@WORKSPACE)/toolchain_linux_arc.json",
        "cp $(dirname $(which qemu-system-arc))/../versions.json $var(@WORKSPACE)/qemu.json"
      ],
      "publish_header": [
        "cat $var(@WORKSPACE)/toolchain_linux_arc.json",
        "cat $var(@WORKSPACE)/qemu.json"
      ],
      "comparator": "ruby $var(@CONFIG_SOURCE_PATH)/sum_compare.rb -v $var(@BASELINE)/gcc.sum $var(@REFERENCE)/gcc.sum"
    }
  }
}
